use indoc::indoc;
use std::{path::PathBuf, sync::Arc};

use alloy_core::hex::ToHexExt;
use datafusion::prelude::*;
use ethers::{prelude::*, utils::AnvilInstance};

////////////////////////////////////////////////////////////////////////////////////////

abigen!(
    TestContract,
    "tests/contracts/out/Contract.sol/Contract.json"
);

////////////////////////////////////////////////////////////////////////////////////////

async fn setup_chain_state() -> (AnvilInstance, Arc<Provider<impl JsonRpcClient>>) {
    let anvil = ethers::core::utils::Anvil::new().spawn();
    let rpc_client = Arc::new(Provider::<Http>::connect(&anvil.endpoint()).await);

    let contracts_dir = PathBuf::from("tests/contracts");
    let rpc_endpoint = anvil.endpoint();
    let admin_address = anvil.addresses()[0];
    let admin_key = anvil.keys()[0].to_bytes().encode_hex_with_prefix();

    // Deploy 2 contracts
    std::process::Command::new("forge")
        .current_dir(&contracts_dir)
        .args([
            "script",
            "script/Deploy.s.sol",
            "--fork-url",
            rpc_endpoint.as_str(),
            "--private-key",
            admin_key.as_str(),
            "--broadcast",
        ])
        .status()
        .expect("Failed to deploy contracts. Is foundry installed?");

    let contract_1_address: Address = "0x5FbDB2315678afecb367f032d93F642f64180aa3"
        .parse()
        .unwrap();
    let contract_2_address: Address = "0xe7f1725e7734ce288f8367e1bb143e90bb3f0512"
        .parse()
        .unwrap();

    let contract_1 = TestContract::new(contract_1_address, rpc_client.clone());
    let contract_2 = TestContract::new(contract_2_address, rpc_client.clone());

    contract_1
        .emit_logs()
        .from(admin_address)
        .send()
        .await
        .unwrap();

    contract_2
        .emit_logs()
        .from(admin_address)
        .send()
        .await
        .unwrap();

    (anvil, rpc_client)
}

////////////////////////////////////////////////////////////////////////////////////////

async fn test_pushdown_common(sql: &str, expected_plan: &str, expected_data: &str) {
    let (_anvil, rpc_client) = setup_chain_state().await;

    // Turn off extra optimizations that create noise in prhysical plans
    let cfg = SessionConfig::new()
        .with_target_partitions(1)
        .with_coalesce_batches(false);

    let mut df_ctx = SessionContext::new_with_config(cfg);
    datafusion_ethers::udf::register_all(&mut df_ctx).unwrap();

    df_ctx.register_catalog(
        "eth",
        Arc::new(datafusion_ethers::provider::EthCatalog::new(rpc_client)),
    );

    let df = df_ctx.sql(sql).await.unwrap();
    assert_eq!(
        datafusion::physical_plan::get_plan_string(
            &df.clone().create_physical_plan().await.unwrap()
        )
        .join("\n"),
        expected_plan.trim()
    );

    let df = df.with_column("block_hash", lit("-")).unwrap();
    super::utils::assert_data_eq(df, expected_data).await;
}

////////////////////////////////////////////////////////////////////////////////////////

#[test_log::test(tokio::test)]
async fn test_scan() {
    let (_anvil, rpc_client) = setup_chain_state().await;

    let df_ctx = SessionContext::new();
    df_ctx.register_catalog(
        "eth",
        Arc::new(datafusion_ethers::provider::EthCatalog::new(rpc_client)),
    );

    let df = df_ctx.sql("select * from eth.eth.logs").await.unwrap();

    super::utils::assert_schema_eq(
        df.schema(),
        indoc!(
            r#"
            message arrow_schema {
              REQUIRED INT64 block_number (INTEGER(64,false));
              REQUIRED BYTE_ARRAY block_hash;
              REQUIRED INT64 transaction_index (INTEGER(64,false));
              REQUIRED BYTE_ARRAY transaction_hash;
              REQUIRED INT64 log_index (INTEGER(64,false));
              REQUIRED BYTE_ARRAY address;
              OPTIONAL BYTE_ARRAY topic0;
              OPTIONAL BYTE_ARRAY topic1;
              OPTIONAL BYTE_ARRAY topic2;
              OPTIONAL BYTE_ARRAY topic3;
              REQUIRED BYTE_ARRAY data;
            }        
            "#
        ),
    );

    assert_eq!(
        df.logical_plan().display_indent().to_string(),
        indoc!(
            "
            Projection: eth.eth.logs.block_number, eth.eth.logs.block_hash, eth.eth.logs.transaction_index, eth.eth.logs.transaction_hash, eth.eth.logs.log_index, eth.eth.logs.address, eth.eth.logs.topic0, eth.eth.logs.topic1, eth.eth.logs.topic2, eth.eth.logs.topic3, eth.eth.logs.data
              TableScan: eth.eth.logs
            "
        ).trim()
    );

    assert_eq!(
        datafusion::physical_plan::get_plan_string(
            &df.clone().create_physical_plan().await.unwrap()
        )
        .join("\n"),
        indoc!(
            "
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Earliest), Some(Latest)]]
            "
        )
        .trim()
    );

    // Block hash is non-deterministic due to timestamp
    let df = df.with_column("block_hash", lit("-")).unwrap();
    super::utils::assert_data_eq(
        df,
        indoc!(
            r#"

            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data                                                                                                                                                                                             |

            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 0         | 5fbdb2315678afecb367f032d93f642f64180aa3 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 1         | 5fbdb2315678afecb367f032d93f642f64180aa3 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 0         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 1         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |

            "#
        ),
    ).await;
}

////////////////////////////////////////////////////////////////////////////////////////

#[test_log::test(tokio::test)]
async fn test_project() {
    let (_anvil, rpc_client) = setup_chain_state().await;

    let df_ctx = SessionContext::new();
    df_ctx.register_catalog(
        "eth",
        Arc::new(datafusion_ethers::provider::EthCatalog::new(rpc_client)),
    );

    let df = df_ctx
        .sql("select transaction_hash, block_number, transaction_index from eth.eth.logs")
        .await
        .unwrap();

    super::utils::assert_schema_eq(
        df.schema(),
        indoc!(
            r#"
            message arrow_schema {
              REQUIRED BYTE_ARRAY transaction_hash;
              REQUIRED INT64 block_number (INTEGER(64,false));
              REQUIRED INT64 transaction_index (INTEGER(64,false));
            }        
            "#
        ),
    );

    assert_eq!(
        df.logical_plan().display_indent().to_string(),
        indoc!(
            "
            Projection: eth.eth.logs.transaction_hash, eth.eth.logs.block_number, eth.eth.logs.transaction_index
              TableScan: eth.eth.logs
            "
        ).trim()
    );

    assert_eq!(
        datafusion::physical_plan::get_plan_string(
            &df.clone().create_physical_plan().await.unwrap()
        )
        .join("\n"),
        indoc!(
            "
            ProjectionExec: expr=[transaction_hash@2 as transaction_hash, block_number@0 as block_number, transaction_index@1 as transaction_index]
              EthGetLogs: projection=[block_number, transaction_index, transaction_hash], filter=[block_number=[Some(Earliest), Some(Latest)]]
            "
        )
        .trim()
    );

    super::utils::assert_data_eq(
        df,
        indoc!(
            r#"
            +------------------------------------------------------------------+--------------+-------------------+
            | transaction_hash                                                 | block_number | transaction_index |
            +------------------------------------------------------------------+--------------+-------------------+
            | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 3            | 0                 |
            | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 3            | 0                 |
            | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 4            | 0                 |
            | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 4            | 0                 |
            +------------------------------------------------------------------+--------------+-------------------+
            "#
        ),
    ).await;
}

////////////////////////////////////////////////////////////////////////////////////////

#[test_log::test(tokio::test)]
async fn test_predicate_pushdown_address_single() {
    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where address = X'5fbdb2315678afecb367f032d93f642f64180aa3'
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[address=0x5fbd…0aa3, block_number=[Some(Earliest), Some(Latest)]]
            "#
        ),
        indoc!(
            r#"

            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data                                                                                                                                                                                             |

            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 0         | 5fbdb2315678afecb367f032d93f642f64180aa3 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 1         | 5fbdb2315678afecb367f032d93f642f64180aa3 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |

            "#
        ),
    ).await;
}

#[test_log::test(tokio::test)]
#[ignore = "Not yet implemented"]
async fn test_predicate_pushdown_address_many() {
    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where address = X'5fbdb2315678afecb367f032d93f642f64180aa3' or address = X'e7f1725e7734ce288f8367e1bb143e90bb3f0512'
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[address=0x5fbd…0aa3, block_number=[Some(Earliest), Some(Latest)]]
            "#
        ),
        indoc!(
            r#"

            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data                                                                                                                                                                                             |

            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 0         | 5fbdb2315678afecb367f032d93f642f64180aa3 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 1         | 5fbdb2315678afecb367f032d93f642f64180aa3 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |

            "#
        ),
    ).await;
}

////////////////////////////////////////////////////////////////////////////////////////

#[test_log::test(tokio::test)]
async fn test_predicate_pushdown_block_number_binary() {
    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where block_number = 4
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Number(4)), Some(Number(4))]]
            "#
        ),
        indoc!(
            r#"
            +--------------+------------+-------------------+------------------------------------------------------------------+-----------+------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data                                                                                                                                                                                             |

            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 0         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 1         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |

            "#
        ),
    ).await;

    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where block_number > 3
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Number(4)), Some(Latest)]]
            "#
        ),
        indoc!(
            r#"

            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data                                                                                                                                                                                             |

            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 0         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 1         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |

            "#
        ),
    ).await;

    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where block_number < 3
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Earliest), Some(Number(2))]]
            "#
        ),
        indoc!(
            r#"
            +--------------+------------+-------------------+------------------+-----------+---------+--------+--------+--------+--------+------+
            | block_number | block_hash | transaction_index | transaction_hash | log_index | address | topic0 | topic1 | topic2 | topic3 | data |
            +--------------+------------+-------------------+------------------+-----------+---------+--------+--------+--------+--------+------+
            +--------------+------------+-------------------+------------------+-----------+---------+--------+--------+--------+--------+------+
            "#
        ),
    ).await;

    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where block_number <= 3
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Earliest), Some(Number(3))]]
            "#
        ),
        indoc!(
            r#"

            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data                                                                                                                                                                                             |

            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 0         | 5fbdb2315678afecb367f032d93f642f64180aa3 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 1         | 5fbdb2315678afecb367f032d93f642f64180aa3 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |

            "#
        ),
    ).await;
}

////////////////////////////////////////////////////////////////////////////////////////

#[test_log::test(tokio::test)]
async fn test_predicate_pushdown_block_number_range() {
    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where block_number >= 3 and block_number <= 4
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Number(3)), Some(Number(4))]]
            "#
        ),
        indoc!(
            r#"

            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data                                                                                                                                                                                             |
            +--------------+------------+-------------------+------------------------------------------------------------------+-----------+------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 0         | 5fbdb2315678afecb367f032d93f642f64180aa3 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 1         | 5fbdb2315678afecb367f032d93f642f64180aa3 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 0         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 1         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |

            "#
        ),
    ).await;

    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where block_number between 2 and 4
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Number(2)), Some(Number(4))]]
            "#
        ),
        indoc!(
            r#"

            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data                                                                                                                                                                                             |

            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 0         | 5fbdb2315678afecb367f032d93f642f64180aa3 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 1         | 5fbdb2315678afecb367f032d93f642f64180aa3 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 0         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 1         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |

            "#
        ),
    ).await;
}

////////////////////////////////////////////////////////////////////////////////////////

#[test_log::test(tokio::test)]
async fn test_predicate_pushdown_topic_0_literal() {
    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where topic0 = X'da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51'
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Earliest), Some(Latest)], topic0=0xda34…4a51]
            "#
        ),
        indoc!(
            r#"

            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2 | topic3 | data                                                                                                                                                                                             |

            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 1         | 5fbdb2315678afecb367f032d93f642f64180aa3 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3 |        |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 1         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512 |        |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |

            "#
        ),
    ).await;
}

////////////////////////////////////////////////////////////////////////////////////////

#[test_log::test(tokio::test)]
async fn test_predicate_pushdown_topic_0_selector() {
    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where topic0 = eth_event_selector('Foo(address indexed addr, uint64 indexed id)')
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Earliest), Some(Latest)], topic0=0xd9e9…ba67]
            "#
        ),
        indoc!(
            r#"
            +--------------+------------+-------------------+------------------------------------------------------------------+-----------+------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+--------+------+
            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data |
            +--------------+------------+-------------------+------------------------------------------------------------------+-----------+------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+--------+------+
            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 0         | 5fbdb2315678afecb367f032d93f642f64180aa3 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |      |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 0         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |      |
            +--------------+------------+-------------------+------------------------------------------------------------------+-----------+------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+--------+------+
            "#
        ),
    ).await;
}

////////////////////////////////////////////////////////////////////////////////////////

#[test_log::test(tokio::test)]
async fn test_predicate_pushdown_topics_many_and() {
    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where
                topic0 = eth_event_selector('Foo(address indexed addr, uint64 indexed id)')
                and
                topic1 = X'000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266'
                and
                topic2 = X'000000000000000000000000000000000000000000000000000000000000007b'
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Earliest), Some(Latest)], topic0=0xd9e9…ba67, topic1=0x0000…2266, topic2=0x0000…007b]
            "#
        ),
        indoc!(
            r#"
            +--------------+------------+-------------------+------------------------------------------------------------------+-----------+------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+--------+------+
            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data |
            +--------------+------------+-------------------+------------------------------------------------------------------+-----------+------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+--------+------+
            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 0         | 5fbdb2315678afecb367f032d93f642f64180aa3 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |      |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 0         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |      |
            +--------------+------------+-------------------+------------------------------------------------------------------+-----------+------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+--------+------+
            "#
        ),
    ).await;
}

////////////////////////////////////////////////////////////////////////////////////////

#[test_log::test(tokio::test)]
#[ignore = "Composite filter expressions are not yet supported"]
async fn test_predicate_pushdown_topics_many_mixed() {
    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where
                (
                    topic0 = eth_event_selector('Foo(address indexed addr, uint64 indexed id)')
                    or
                    topic0 = eth_event_selector('Bar(address indexed addr, string str)')
                )
                and
                topic1 = X'000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266'
                and
                topic2 = X'000000000000000000000000000000000000000000000000000000000000007b'
            "#
        ),
        indoc!(
            r#"
            EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Earliest), Some(Latest)], topic0=0xd9e9…ba67, topic1=0x0000…2266, topic2=0x0000…007b]
            "#
        ),
        indoc!(
            r#"
            +--------------+------------+-------------------+------------------------------------------------------------------+-----------+------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+--------+------+
            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data |
            +--------------+------------+-------------------+------------------------------------------------------------------+-----------+------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+--------+------+
            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 0         | 5fbdb2315678afecb367f032d93f642f64180aa3 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |      |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 0         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |      |
            +--------------+------------+-------------------+------------------------------------------------------------------+-----------+------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+------------------------------------------------------------------+--------+------+
            "#
        ),
    ).await;
}

////////////////////////////////////////////////////////////////////////////////////////

#[test_log::test(tokio::test)]
async fn test_predicate_pushdown_limit() {
    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            limit 3
            "#
        ),
        indoc!(
            r#"
            GlobalLimitExec: skip=0, fetch=3
              EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Earliest), Some(Latest)]], limit=3
            "#
        ),
        indoc!(
            r#"

            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2                                                           | topic3 | data                                                                                                                                                                                             |

            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 0         | 5fbdb2315678afecb367f032d93f642f64180aa3 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |
            | 3            | -          | 0                 | ddba13f2509c99ce7f194cf77d754b4134255e24c1b104eddc4cb690c5582379 | 1         | 5fbdb2315678afecb367f032d93f642f64180aa3 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3 |                                                                  |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |
            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 0         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | d9e93ef3ac030ca8925f1725575c96d8a49bd825c0843a168225c1bb686bba67 | 000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266 | 000000000000000000000000000000000000000000000000000000000000007b |        |                                                                                                                                                                                                  |

            "#
        ),
    ).await;
}

////////////////////////////////////////////////////////////////////////////////////////

#[test_log::test(tokio::test)]
async fn test_predicate_pushdown_unsupported() {
    test_pushdown_common(
        indoc!(
            r#"
            select *
            from eth.eth.logs
            where block_number = 4 and log_index = 1
            "#
        ),
        indoc!(
            r#"
            FilterExec: log_index@4 = 1
              EthGetLogs: projection=[block_number, block_hash, transaction_index, transaction_hash, log_index, address, topic0, topic1, topic2, topic3, data], filter=[block_number=[Some(Number(4)), Some(Number(4))]]
            "#
        ),
        indoc!(
            r#"

            | block_number | block_hash | transaction_index | transaction_hash                                                 | log_index | address                                  | topic0                                                           | topic1                                                           | topic2 | topic3 | data                                                                                                                                                                                             |

            | 4            | -          | 0                 | 554478d501eee16dcd25f6bd30be3a2251daf9a02e643d152fcfc59934a87fbd | 1         | e7f1725e7734ce288f8367e1bb143e90bb3f0512 | da343a831f3915a0c465305afdd6b0f1c8a3c85635bb14272bf16b6de3664a51 | 000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512 |        |        | 00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005612d626172000000000000000000000000000000000000000000000000000000 |

            "#
        ),
    ).await;
}

////////////////////////////////////////////////////////////////////////////////////////
